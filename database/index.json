[
    {
      "indexname": "users_pkey",
      "indexdef": "CREATE UNIQUE INDEX users_pkey ON auth.users USING btree (id)"
    },
    {
      "indexname": "users_instance_id_idx",
      "indexdef": "CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id)"
    },
    {
      "indexname": "refresh_tokens_pkey",
      "indexdef": "CREATE UNIQUE INDEX refresh_tokens_pkey ON auth.refresh_tokens USING btree (id)"
    },
    {
      "indexname": "refresh_tokens_instance_id_idx",
      "indexdef": "CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id)"
    },
    {
      "indexname": "refresh_tokens_instance_id_user_id_idx",
      "indexdef": "CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id)"
    },
    {
      "indexname": "instances_pkey",
      "indexdef": "CREATE UNIQUE INDEX instances_pkey ON auth.instances USING btree (id)"
    },
    {
      "indexname": "audit_log_entries_pkey",
      "indexdef": "CREATE UNIQUE INDEX audit_log_entries_pkey ON auth.audit_log_entries USING btree (id)"
    },
    {
      "indexname": "audit_logs_instance_id_idx",
      "indexdef": "CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id)"
    },
    {
      "indexname": "schema_migrations_pkey",
      "indexdef": "CREATE UNIQUE INDEX schema_migrations_pkey ON auth.schema_migrations USING btree (version)"
    },
    {
      "indexname": "buckets_pkey",
      "indexdef": "CREATE UNIQUE INDEX buckets_pkey ON storage.buckets USING btree (id)"
    },
    {
      "indexname": "bname",
      "indexdef": "CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name)"
    },
    {
      "indexname": "webhook_events_pkey",
      "indexdef": "CREATE UNIQUE INDEX webhook_events_pkey ON public.webhook_events USING btree (id)"
    },
    {
      "indexname": "objects_pkey",
      "indexdef": "CREATE UNIQUE INDEX objects_pkey ON storage.objects USING btree (id)"
    },
    {
      "indexname": "bucketid_objname",
      "indexdef": "CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name)"
    },
    {
      "indexname": "name_prefix_search",
      "indexdef": "CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops)"
    },
    {
      "indexname": "migrations_pkey",
      "indexdef": "CREATE UNIQUE INDEX migrations_pkey ON storage.migrations USING btree (id)"
    },
    {
      "indexname": "migrations_name_key",
      "indexdef": "CREATE UNIQUE INDEX migrations_name_key ON storage.migrations USING btree (name)"
    },
    {
      "indexname": "secrets_pkey",
      "indexdef": "CREATE UNIQUE INDEX secrets_pkey ON vault.secrets USING btree (id)"
    },
    {
      "indexname": "secrets_name_idx",
      "indexdef": "CREATE UNIQUE INDEX secrets_name_idx ON vault.secrets USING btree (name) WHERE (name IS NOT NULL)"
    },
    {
      "indexname": "webhook_events_event_id_key",
      "indexdef": "CREATE UNIQUE INDEX webhook_events_event_id_key ON public.webhook_events USING btree (event_id)"
    },
    {
      "indexname": "refresh_tokens_token_unique",
      "indexdef": "CREATE UNIQUE INDEX refresh_tokens_token_unique ON auth.refresh_tokens USING btree (token)"
    },
    {
      "indexname": "refresh_tokens_parent_idx",
      "indexdef": "CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent)"
    },
    {
      "indexname": "identities_user_id_idx",
      "indexdef": "CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id)"
    },
    {
      "indexname": "users_instance_id_email_idx",
      "indexdef": "CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text))"
    },
    {
      "indexname": "confirmation_token_idx",
      "indexdef": "CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text)"
    },
    {
      "indexname": "recovery_token_idx",
      "indexdef": "CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text)"
    },
    {
      "indexname": "email_change_token_current_idx",
      "indexdef": "CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text)"
    },
    {
      "indexname": "email_change_token_new_idx",
      "indexdef": "CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text)"
    },
    {
      "indexname": "reauthentication_token_idx",
      "indexdef": "CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text)"
    },
    {
      "indexname": "sessions_pkey",
      "indexdef": "CREATE UNIQUE INDEX sessions_pkey ON auth.sessions USING btree (id)"
    },
    {
      "indexname": "mfa_factors_pkey",
      "indexdef": "CREATE UNIQUE INDEX mfa_factors_pkey ON auth.mfa_factors USING btree (id)"
    },
    {
      "indexname": "mfa_factors_user_friendly_name_unique",
      "indexdef": "CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text)"
    },
    {
      "indexname": "mfa_challenges_pkey",
      "indexdef": "CREATE UNIQUE INDEX mfa_challenges_pkey ON auth.mfa_challenges USING btree (id)"
    },
    {
      "indexname": "mfa_amr_claims_session_id_authentication_method_pkey",
      "indexdef": "CREATE UNIQUE INDEX mfa_amr_claims_session_id_authentication_method_pkey ON auth.mfa_amr_claims USING btree (session_id, authentication_method)"
    },
    {
      "indexname": "amr_id_pk",
      "indexdef": "CREATE UNIQUE INDEX amr_id_pk ON auth.mfa_amr_claims USING btree (id)"
    },
    {
      "indexname": "user_id_created_at_idx",
      "indexdef": "CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at)"
    },
    {
      "indexname": "factor_id_created_at_idx",
      "indexdef": "CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at)"
    },
    {
      "indexname": "sessions_user_id_idx",
      "indexdef": "CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id)"
    },
    {
      "indexname": "refresh_tokens_session_id_revoked_idx",
      "indexdef": "CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked)"
    },
    {
      "indexname": "sso_providers_pkey",
      "indexdef": "CREATE UNIQUE INDEX sso_providers_pkey ON auth.sso_providers USING btree (id)"
    },
    {
      "indexname": "sso_providers_resource_id_idx",
      "indexdef": "CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id))"
    },
    {
      "indexname": "sso_domains_pkey",
      "indexdef": "CREATE UNIQUE INDEX sso_domains_pkey ON auth.sso_domains USING btree (id)"
    },
    {
      "indexname": "sso_domains_sso_provider_id_idx",
      "indexdef": "CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id)"
    },
    {
      "indexname": "sso_domains_domain_idx",
      "indexdef": "CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain))"
    },
    {
      "indexname": "saml_providers_pkey",
      "indexdef": "CREATE UNIQUE INDEX saml_providers_pkey ON auth.saml_providers USING btree (id)"
    },
    {
      "indexname": "saml_providers_entity_id_key",
      "indexdef": "CREATE UNIQUE INDEX saml_providers_entity_id_key ON auth.saml_providers USING btree (entity_id)"
    },
    {
      "indexname": "saml_providers_sso_provider_id_idx",
      "indexdef": "CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id)"
    },
    {
      "indexname": "saml_relay_states_pkey",
      "indexdef": "CREATE UNIQUE INDEX saml_relay_states_pkey ON auth.saml_relay_states USING btree (id)"
    },
    {
      "indexname": "saml_relay_states_sso_provider_id_idx",
      "indexdef": "CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id)"
    },
    {
      "indexname": "saml_relay_states_for_email_idx",
      "indexdef": "CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email)"
    },
    {
      "indexname": "idx_webhook_events_event_id",
      "indexdef": "CREATE INDEX idx_webhook_events_event_id ON public.webhook_events USING btree (event_id)"
    },
    {
      "indexname": "users_email_partial_key",
      "indexdef": "CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false)"
    },
    {
      "indexname": "idx_webhook_events_event_type",
      "indexdef": "CREATE INDEX idx_webhook_events_event_type ON public.webhook_events USING btree (event_type)"
    },
    {
      "indexname": "identities_email_idx",
      "indexdef": "CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops)"
    },
    {
      "indexname": "users_phone_key",
      "indexdef": "CREATE UNIQUE INDEX users_phone_key ON auth.users USING btree (phone)"
    },
    {
      "indexname": "flow_state_pkey",
      "indexdef": "CREATE UNIQUE INDEX flow_state_pkey ON auth.flow_state USING btree (id)"
    },
    {
      "indexname": "idx_auth_code",
      "indexdef": "CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code)"
    },
    {
      "indexname": "idx_user_id_auth_method",
      "indexdef": "CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method)"
    },
    {
      "indexname": "refresh_tokens_updated_at_idx",
      "indexdef": "CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC)"
    },
    {
      "indexname": "flow_state_created_at_idx",
      "indexdef": "CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC)"
    },
    {
      "indexname": "saml_relay_states_created_at_idx",
      "indexdef": "CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC)"
    },
    {
      "indexname": "sessions_not_after_idx",
      "indexdef": "CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC)"
    },
    {
      "indexname": "mfa_challenge_created_at_idx",
      "indexdef": "CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC)"
    },
    {
      "indexname": "mfa_factors_user_id_idx",
      "indexdef": "CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id)"
    },
    {
      "indexname": "identities_pkey",
      "indexdef": "CREATE UNIQUE INDEX identities_pkey ON auth.identities USING btree (id)"
    },
    {
      "indexname": "identities_provider_id_provider_unique",
      "indexdef": "CREATE UNIQUE INDEX identities_provider_id_provider_unique ON auth.identities USING btree (provider_id, provider)"
    },
    {
      "indexname": "users_is_anonymous_idx",
      "indexdef": "CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous)"
    },
    {
      "indexname": "one_time_tokens_pkey",
      "indexdef": "CREATE UNIQUE INDEX one_time_tokens_pkey ON auth.one_time_tokens USING btree (id)"
    },
    {
      "indexname": "one_time_tokens_token_hash_hash_idx",
      "indexdef": "CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash)"
    },
    {
      "indexname": "one_time_tokens_relates_to_hash_idx",
      "indexdef": "CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to)"
    },
    {
      "indexname": "one_time_tokens_user_id_token_type_key",
      "indexdef": "CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type)"
    },
    {
      "indexname": "idx_webhook_events_processed",
      "indexdef": "CREATE INDEX idx_webhook_events_processed ON public.webhook_events USING btree (processed)"
    },
    {
      "indexname": "unique_phone_factor_per_user",
      "indexdef": "CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone)"
    },
    {
      "indexname": "mfa_factors_last_challenged_at_key",
      "indexdef": "CREATE UNIQUE INDEX mfa_factors_last_challenged_at_key ON auth.mfa_factors USING btree (last_challenged_at)"
    },
    {
      "indexname": "sso_providers_resource_id_pattern_idx",
      "indexdef": "CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops)"
    },
    {
      "indexname": "schema_migrations_pkey",
      "indexdef": "CREATE UNIQUE INDEX schema_migrations_pkey ON realtime.schema_migrations USING btree (version)"
    },
    {
      "indexname": "idx_objects_bucket_id_name",
      "indexdef": "CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE \"C\")"
    },
    {
      "indexname": "idx_webhook_events_created_at",
      "indexdef": "CREATE INDEX idx_webhook_events_created_at ON public.webhook_events USING btree (created_at)"
    },
    {
      "indexname": "s3_multipart_uploads_pkey",
      "indexdef": "CREATE UNIQUE INDEX s3_multipart_uploads_pkey ON storage.s3_multipart_uploads USING btree (id)"
    },
    {
      "indexname": "s3_multipart_uploads_parts_pkey",
      "indexdef": "CREATE UNIQUE INDEX s3_multipart_uploads_parts_pkey ON storage.s3_multipart_uploads_parts USING btree (id)"
    },
    {
      "indexname": "idx_multipart_uploads_list",
      "indexdef": "CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at)"
    },
    {
      "indexname": "pk_subscription",
      "indexdef": "CREATE UNIQUE INDEX pk_subscription ON realtime.subscription USING btree (id)"
    },
    {
      "indexname": "subscription_subscription_id_entity_filters_key",
      "indexdef": "CREATE UNIQUE INDEX subscription_subscription_id_entity_filters_key ON realtime.subscription USING btree (subscription_id, entity, filters)"
    },
    {
      "indexname": "messages_pkey",
      "indexdef": "CREATE UNIQUE INDEX messages_pkey ON ONLY realtime.messages USING btree (id, inserted_at)"
    },
    {
      "indexname": "ix_realtime_subscription_entity",
      "indexdef": "CREATE INDEX ix_realtime_subscription_entity ON realtime.subscription USING btree (entity)"
    },
    {
      "indexname": "oauth_clients_pkey",
      "indexdef": "CREATE UNIQUE INDEX oauth_clients_pkey ON auth.oauth_clients USING btree (id)"
    },
    {
      "indexname": "oauth_clients_client_id_key",
      "indexdef": "CREATE UNIQUE INDEX oauth_clients_client_id_key ON auth.oauth_clients USING btree (client_id)"
    },
    {
      "indexname": "oauth_clients_client_id_idx",
      "indexdef": "CREATE INDEX oauth_clients_client_id_idx ON auth.oauth_clients USING btree (client_id)"
    },
    {
      "indexname": "oauth_clients_deleted_at_idx",
      "indexdef": "CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at)"
    },
    {
      "indexname": "schema_migrations_pkey",
      "indexdef": "CREATE UNIQUE INDEX schema_migrations_pkey ON supabase_migrations.schema_migrations USING btree (version)"
    },
    {
      "indexname": "schema_migrations_idempotency_key_key",
      "indexdef": "CREATE UNIQUE INDEX schema_migrations_idempotency_key_key ON supabase_migrations.schema_migrations USING btree (idempotency_key)"
    },
    {
      "indexname": "user_profiles_pkey",
      "indexdef": "CREATE UNIQUE INDEX user_profiles_pkey ON public.user_profiles USING btree (id)"
    },
    {
      "indexname": "exam_stats_pkey",
      "indexdef": "CREATE UNIQUE INDEX exam_stats_pkey ON public.exam_stats USING btree (id)"
    },
    {
      "indexname": "test_attempts_pkey",
      "indexdef": "CREATE UNIQUE INDEX test_attempts_pkey ON public.test_attempts USING btree (id)"
    },
    {
      "indexname": "prefixes_pkey",
      "indexdef": "CREATE UNIQUE INDEX prefixes_pkey ON storage.prefixes USING btree (bucket_id, level, name)"
    },
    {
      "indexname": "idx_name_bucket_level_unique",
      "indexdef": "CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE \"C\", bucket_id, level)"
    },
    {
      "indexname": "idx_exam_stats_user_id",
      "indexdef": "CREATE INDEX idx_exam_stats_user_id ON public.exam_stats USING btree (user_id)"
    },
    {
      "indexname": "objects_bucket_id_level_idx",
      "indexdef": "CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE \"C\")"
    },
    {
      "indexname": "idx_exam_stats_exam_id",
      "indexdef": "CREATE INDEX idx_exam_stats_exam_id ON public.exam_stats USING btree (exam_id)"
    },
    {
      "indexname": "idx_objects_lower_name",
      "indexdef": "CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level)"
    },
    {
      "indexname": "idx_exam_stats_rank",
      "indexdef": "CREATE INDEX idx_exam_stats_rank ON public.exam_stats USING btree (rank)"
    },
    {
      "indexname": "idx_test_attempts_user_id",
      "indexdef": "CREATE INDEX idx_test_attempts_user_id ON public.test_attempts USING btree (user_id)"
    },
    {
      "indexname": "idx_test_attempts_exam_id",
      "indexdef": "CREATE INDEX idx_test_attempts_exam_id ON public.test_attempts USING btree (exam_id)"
    },
    {
      "indexname": "idx_test_attempts_completed_at",
      "indexdef": "CREATE INDEX idx_test_attempts_completed_at ON public.test_attempts USING btree (completed_at)"
    },
    {
      "indexname": "test_completions_pkey",
      "indexdef": "CREATE UNIQUE INDEX test_completions_pkey ON public.test_completions USING btree (id)"
    },
    {
      "indexname": "idx_test_completions_user_id",
      "indexdef": "CREATE INDEX idx_test_completions_user_id ON public.test_completions USING btree (user_id)"
    },
    {
      "indexname": "idx_test_completions_exam_id",
      "indexdef": "CREATE INDEX idx_test_completions_exam_id ON public.test_completions USING btree (exam_id)"
    },
    {
      "indexname": "idx_test_completions_test_type",
      "indexdef": "CREATE INDEX idx_test_completions_test_type ON public.test_completions USING btree (test_type)"
    },
    {
      "indexname": "idx_test_completions_test_id",
      "indexdef": "CREATE INDEX idx_test_completions_test_id ON public.test_completions USING btree (test_id)"
    },
    {
      "indexname": "idx_test_completions_completed_at",
      "indexdef": "CREATE INDEX idx_test_completions_completed_at ON public.test_completions USING btree (completed_at)"
    },
    {
      "indexname": "idx_test_completions_unique",
      "indexdef": "CREATE UNIQUE INDEX idx_test_completions_unique ON public.test_completions USING btree (user_id, exam_id, test_type, test_id, topic_id)"
    },
    {
      "indexname": "user_streaks_pkey",
      "indexdef": "CREATE UNIQUE INDEX user_streaks_pkey ON public.user_streaks USING btree (id)"
    },
    {
      "indexname": "idx_user_streaks_user_id",
      "indexdef": "CREATE UNIQUE INDEX idx_user_streaks_user_id ON public.user_streaks USING btree (user_id)"
    },
    {
      "indexname": "individual_test_scores_pkey",
      "indexdef": "CREATE UNIQUE INDEX individual_test_scores_pkey ON public.individual_test_scores USING btree (id)"
    },
    {
      "indexname": "idx_individual_test_scores_user_id",
      "indexdef": "CREATE INDEX idx_individual_test_scores_user_id ON public.individual_test_scores USING btree (user_id)"
    },
    {
      "indexname": "idx_individual_test_scores_exam_id",
      "indexdef": "CREATE INDEX idx_individual_test_scores_exam_id ON public.individual_test_scores USING btree (exam_id)"
    },
    {
      "indexname": "idx_individual_test_scores_test_type",
      "indexdef": "CREATE INDEX idx_individual_test_scores_test_type ON public.individual_test_scores USING btree (test_type)"
    },
    {
      "indexname": "idx_individual_test_scores_test_id",
      "indexdef": "CREATE INDEX idx_individual_test_scores_test_id ON public.individual_test_scores USING btree (test_id)"
    },
    {
      "indexname": "idx_individual_test_scores_rank",
      "indexdef": "CREATE INDEX idx_individual_test_scores_rank ON public.individual_test_scores USING btree (rank)"
    },
    {
      "indexname": "individual_test_scores_unique",
      "indexdef": "CREATE UNIQUE INDEX individual_test_scores_unique ON public.individual_test_scores USING btree (user_id, exam_id, test_type, test_id)"
    },
    {
      "indexname": "exam_stats_user_exam_unique",
      "indexdef": "CREATE UNIQUE INDEX exam_stats_user_exam_unique ON public.exam_stats USING btree (user_id, exam_id)"
    },
    {
      "indexname": "test_completions_unique",
      "indexdef": "CREATE UNIQUE INDEX test_completions_unique ON public.test_completions USING btree (user_id, exam_id, test_type, test_id, topic_id)"
    },
    {
      "indexname": "user_memberships_pkey",
      "indexdef": "CREATE UNIQUE INDEX user_memberships_pkey ON public.user_memberships USING btree (id)"
    },
    {
      "indexname": "idx_prefixes_lower_name",
      "indexdef": "CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops)"
    },
    {
      "indexname": "buckets_analytics_pkey",
      "indexdef": "CREATE UNIQUE INDEX buckets_analytics_pkey ON storage.buckets_analytics USING btree (id)"
    },
    {
      "indexname": "otp_verifications_pkey",
      "indexdef": "CREATE UNIQUE INDEX otp_verifications_pkey ON public.otp_verifications USING btree (id)"
    },
    {
      "indexname": "idx_otp_verifications_email",
      "indexdef": "CREATE INDEX idx_otp_verifications_email ON public.otp_verifications USING btree (email)"
    },
    {
      "indexname": "idx_otp_verifications_phone",
      "indexdef": "CREATE INDEX idx_otp_verifications_phone ON public.otp_verifications USING btree (phone)"
    },
    {
      "indexname": "idx_otp_verifications_expires_at",
      "indexdef": "CREATE INDEX idx_otp_verifications_expires_at ON public.otp_verifications USING btree (expires_at)"
    },
    {
      "indexname": "idx_user_memberships_user_id",
      "indexdef": "CREATE INDEX idx_user_memberships_user_id ON public.user_memberships USING btree (user_id)"
    },
    {
      "indexname": "idx_user_memberships_status",
      "indexdef": "CREATE INDEX idx_user_memberships_status ON public.user_memberships USING btree (status)"
    },
    {
      "indexname": "idx_user_memberships_end_date",
      "indexdef": "CREATE INDEX idx_user_memberships_end_date ON public.user_memberships USING btree (end_date)"
    },
    {
      "indexname": "idx_user_profiles_membership_plan",
      "indexdef": "CREATE INDEX idx_user_profiles_membership_plan ON public.user_profiles USING btree (membership_plan)"
    },
    {
      "indexname": "referral_codes_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_codes_pkey ON public.referral_codes USING btree (id)"
    },
    {
      "indexname": "referral_codes_code_key",
      "indexdef": "CREATE UNIQUE INDEX referral_codes_code_key ON public.referral_codes USING btree (code)"
    },
    {
      "indexname": "referral_payouts_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_payouts_pkey ON public.referral_payouts USING btree (id)"
    },
    {
      "indexname": "idx_referral_codes_user_id",
      "indexdef": "CREATE INDEX idx_referral_codes_user_id ON public.referral_codes USING btree (user_id)"
    },
    {
      "indexname": "idx_referral_codes_code",
      "indexdef": "CREATE INDEX idx_referral_codes_code ON public.referral_codes USING btree (code)"
    },
    {
      "indexname": "idx_referral_codes_is_active",
      "indexdef": "CREATE INDEX idx_referral_codes_is_active ON public.referral_codes USING btree (is_active)"
    },
    {
      "indexname": "idx_referral_payouts_user_id",
      "indexdef": "CREATE INDEX idx_referral_payouts_user_id ON public.referral_payouts USING btree (user_id)"
    },
    {
      "indexname": "idx_referral_payouts_status",
      "indexdef": "CREATE INDEX idx_referral_payouts_status ON public.referral_payouts USING btree (status)"
    },
    {
      "indexname": "membership_transactions_pkey",
      "indexdef": "CREATE UNIQUE INDEX membership_transactions_pkey ON public.membership_transactions USING btree (id)"
    },
    {
      "indexname": "membership_transactions_transaction_id_key",
      "indexdef": "CREATE UNIQUE INDEX membership_transactions_transaction_id_key ON public.membership_transactions USING btree (transaction_id)"
    },
    {
      "indexname": "idx_membership_transactions_user",
      "indexdef": "CREATE INDEX idx_membership_transactions_user ON public.membership_transactions USING btree (user_id)"
    },
    {
      "indexname": "idx_user_profiles_referral_code",
      "indexdef": "CREATE INDEX idx_user_profiles_referral_code ON public.user_profiles USING btree (referral_code)"
    },
    {
      "indexname": "daily_visits_pkey",
      "indexdef": "CREATE UNIQUE INDEX daily_visits_pkey ON public.daily_visits USING btree (id)"
    },
    {
      "indexname": "unique_daily_visit",
      "indexdef": "CREATE UNIQUE INDEX unique_daily_visit ON public.daily_visits USING btree (user_id, visit_date)"
    },
    {
      "indexname": "idx_user_profiles_phone_verified",
      "indexdef": "CREATE INDEX idx_user_profiles_phone_verified ON public.user_profiles USING btree (phone_verified)"
    },
    {
      "indexname": "idx_user_profiles_referral_earnings",
      "indexdef": "CREATE INDEX idx_user_profiles_referral_earnings ON public.user_profiles USING btree (referral_earnings)"
    },
    {
      "indexname": "idx_daily_visits_user_date",
      "indexdef": "CREATE INDEX idx_daily_visits_user_date ON public.daily_visits USING btree (user_id, visit_date)"
    },
    {
      "indexname": "idx_user_streaks_last_activity",
      "indexdef": "CREATE INDEX idx_user_streaks_last_activity ON public.user_streaks USING btree (last_activity_date)"
    },
    {
      "indexname": "phone_verifications_pkey",
      "indexdef": "CREATE UNIQUE INDEX phone_verifications_pkey ON public.phone_verifications USING btree (id)"
    },
    {
      "indexname": "idx_phone_verifications_user_id",
      "indexdef": "CREATE INDEX idx_phone_verifications_user_id ON public.phone_verifications USING btree (user_id)"
    },
    {
      "indexname": "idx_phone_verifications_phone",
      "indexdef": "CREATE INDEX idx_phone_verifications_phone ON public.phone_verifications USING btree (phone)"
    },
    {
      "indexname": "idx_phone_verifications_expires_at",
      "indexdef": "CREATE INDEX idx_phone_verifications_expires_at ON public.phone_verifications USING btree (expires_at)"
    },
    {
      "indexname": "referral_mappings_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_mappings_pkey ON public.referral_mappings USING btree (id)"
    },
    {
      "indexname": "referral_mappings_referred_id_key",
      "indexdef": "CREATE UNIQUE INDEX referral_mappings_referred_id_key ON public.referral_mappings USING btree (referred_id)"
    },
    {
      "indexname": "referral_earnings_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_earnings_pkey ON public.referral_earnings USING btree (id)"
    },
    {
      "indexname": "referral_transactions_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_transactions_pkey ON public.referral_transactions USING btree (id)"
    },
    {
      "indexname": "idx_referral_mappings_referrer",
      "indexdef": "CREATE INDEX idx_referral_mappings_referrer ON public.referral_mappings USING btree (referrer_id)"
    },
    {
      "indexname": "idx_referral_mappings_referred",
      "indexdef": "CREATE INDEX idx_referral_mappings_referred ON public.referral_mappings USING btree (referred_id)"
    },
    {
      "indexname": "idx_referral_mappings_code",
      "indexdef": "CREATE INDEX idx_referral_mappings_code ON public.referral_mappings USING btree (referral_code)"
    },
    {
      "indexname": "idx_referral_earnings_referrer",
      "indexdef": "CREATE INDEX idx_referral_earnings_referrer ON public.referral_earnings USING btree (referrer_id)"
    },
    {
      "indexname": "idx_referral_earnings_referred",
      "indexdef": "CREATE INDEX idx_referral_earnings_referred ON public.referral_earnings USING btree (referred_id)"
    },
    {
      "indexname": "idx_referral_earnings_status",
      "indexdef": "CREATE INDEX idx_referral_earnings_status ON public.referral_earnings USING btree (status)"
    },
    {
      "indexname": "idx_referral_transactions_referrer",
      "indexdef": "CREATE INDEX idx_referral_transactions_referrer ON public.referral_transactions USING btree (referrer_id)"
    },
    {
      "indexname": "idx_referral_transactions_referred",
      "indexdef": "CREATE INDEX idx_referral_transactions_referred ON public.referral_transactions USING btree (referred_id)"
    },
    {
      "indexname": "referral_tracking_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_tracking_pkey ON public.referral_tracking USING btree (id)"
    },
    {
      "indexname": "referral_rewards_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_rewards_pkey ON public.referral_rewards USING btree (id)"
    },
    {
      "indexname": "referral_links_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_links_pkey ON public.referral_links USING btree (id)"
    },
    {
      "indexname": "referral_events_pkey",
      "indexdef": "CREATE UNIQUE INDEX referral_events_pkey ON public.referral_events USING btree (id)"
    },
    {
      "indexname": "idx_referral_tracking_referrer",
      "indexdef": "CREATE INDEX idx_referral_tracking_referrer ON public.referral_tracking USING btree (referrer_id)"
    },
    {
      "indexname": "idx_referral_tracking_referred",
      "indexdef": "CREATE INDEX idx_referral_tracking_referred ON public.referral_tracking USING btree (referred_id)"
    },
    {
      "indexname": "idx_referral_tracking_code",
      "indexdef": "CREATE INDEX idx_referral_tracking_code ON public.referral_tracking USING btree (referral_code)"
    },
    {
      "indexname": "idx_referral_tracking_status",
      "indexdef": "CREATE INDEX idx_referral_tracking_status ON public.referral_tracking USING btree (status)"
    },
    {
      "indexname": "idx_referral_rewards_referrer",
      "indexdef": "CREATE INDEX idx_referral_rewards_referrer ON public.referral_rewards USING btree (referrer_id)"
    },
    {
      "indexname": "idx_referral_links_user",
      "indexdef": "CREATE INDEX idx_referral_links_user ON public.referral_links USING btree (user_id)"
    },
    {
      "indexname": "idx_referral_links_code",
      "indexdef": "CREATE INDEX idx_referral_links_code ON public.referral_links USING btree (referral_code)"
    },
    {
      "indexname": "idx_referral_events_type",
      "indexdef": "CREATE INDEX idx_referral_events_type ON public.referral_events USING btree (event_type)"
    },
    {
      "indexname": "idx_referral_events_referrer",
      "indexdef": "CREATE INDEX idx_referral_events_referrer ON public.referral_events USING btree (referrer_id)"
    },
    {
      "indexname": "membership_plans_pkey",
      "indexdef": "CREATE UNIQUE INDEX membership_plans_pkey ON public.membership_plans USING btree (id)"
    },
    {
      "indexname": "membership_features_pkey",
      "indexdef": "CREATE UNIQUE INDEX membership_features_pkey ON public.membership_features USING btree (id)"
    },
    {
      "indexname": "idx_membership_plans_active",
      "indexdef": "CREATE INDEX idx_membership_plans_active ON public.membership_plans USING btree (is_active)"
    },
    {
      "indexname": "idx_membership_plans_display_order",
      "indexdef": "CREATE INDEX idx_membership_plans_display_order ON public.membership_plans USING btree (display_order)"
    },
    {
      "indexname": "idx_membership_features_plan_id",
      "indexdef": "CREATE INDEX idx_membership_features_plan_id ON public.membership_features USING btree (plan_id)"
    },
    {
      "indexname": "idx_membership_features_display_order",
      "indexdef": "CREATE INDEX idx_membership_features_display_order ON public.membership_features USING btree (display_order)"
    },
    {
      "indexname": "payment_verifications_pkey",
      "indexdef": "CREATE UNIQUE INDEX payment_verifications_pkey ON public.payment_verifications USING btree (id)"
    },
    {
      "indexname": "payment_audit_log_pkey",
      "indexdef": "CREATE UNIQUE INDEX payment_audit_log_pkey ON public.payment_audit_log USING btree (id)"
    },
    {
      "indexname": "idx_payment_verifications_payment_id",
      "indexdef": "CREATE INDEX idx_payment_verifications_payment_id ON public.payment_verifications USING btree (payment_id)"
    },
    {
      "indexname": "idx_payment_audit_log_payment_id",
      "indexdef": "CREATE INDEX idx_payment_audit_log_payment_id ON public.payment_audit_log USING btree (payment_id)"
    },
    {
      "indexname": "user_profiles_phone_unique",
      "indexdef": "CREATE UNIQUE INDEX user_profiles_phone_unique ON public.user_profiles USING btree (phone)"
    },
    {
      "indexname": "idx_user_profiles_phone",
      "indexdef": "CREATE INDEX idx_user_profiles_phone ON public.user_profiles USING btree (phone) WHERE (phone IS NOT NULL)"
    }
  ]